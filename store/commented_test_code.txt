/store/test/
def test_get_filter(self):
    url = reverse('book-list')
    books = Book.objects.filter(id__in=[self.book_1.id, self.book_3.id]).annotate(
        annotated_likes=Count(Case(When(userbookrelation__like=True, then=1)))
    ).order_by('id')
    response = self.client.get(url, data={'price': 225})
    serializer_data = BookSerializer(books, many=True).data
    print('ser', serializer_data)
    print('res', response.data)
    self.assertEqual(status.HTTP_200_OK, response.status_code)
    self.assertEqual(serializer_data, response.data)

def test_get_search(self):
    url = reverse('book-list')
    books = Book.objects.filter(id__in=[self.book_1.id, self.book_3.id]).annotate(
        annotated_likes=Count(Case(When(userbookrelation__like=True, then=1)))
    ).order_by('id')
    response = self.client.get(url, data={'search': 'Author 1'})
    serializer_data = BookSerializer(books, many=True).data
    self.assertEqual(status.HTTP_200_OK, response.status_code)
    self.assertEqual(serializer_data, response.data)